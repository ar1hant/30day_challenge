//Initial Template for C++

#include <bits/stdc++.h>
#include <string>

using namespace std;


 // } Driver Code Ends
//User function Template for C++

void solve(int a[], int n, vector<string>& res, vector<string> temp, int start, string s){
    if(start == n)
        res.push_back(s);
    else{
        string cur = temp[a[start]];
        for(char ch : cur)
            solve(a, n, res, temp, start + 1, s + ch);
    }
}

class Solution
{
    public:
    //Function to find list of all words possible by pressing given numbers.
    vector<string> possibleWords(int a[], int n){
        vector<string> res;
        vector<string> temp(10);
        temp[2] = "abc";
        temp[3] = "def";
        temp[4] = "ghi";
        temp[5] = "jkl";
        temp[6] = "mno";
        temp[7] = "pqrs";
        temp[8] = "tuv";
        temp[9] = "wxyz";
        solve(a, n, res, temp, 0, "");
        return res;
    }
};


// { Driver Code Starts.

int main() {
  
	int T;
	
	cin >> T; //testcases
	
	while(T--){ //while testcases exist
	   int N;
	    
	   cin >> N; //input size of array
	   
	   int a[N]; //declare the array
	   
	   for(int i =0;i<N;i++){
	       cin >> a[i]; //input the elements of array that are keys to be pressed
	   }
	   
	   Solution obj;
	   
	  vector <string> res = obj.possibleWords(a,N);
	  for (string i : res) cout << i << " ";
	   cout << endl;
	}
	
	return 0;
}  // } Driver Code Ends
