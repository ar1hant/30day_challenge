#include <bits/stdc++.h> 
using namespace std; 

 // } Driver Code Ends
class Solution
{   
    public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int R, int C) 
    {
        int u = 0, d = R - 1,l = 0, r = C - 1;
        vector<int> res;
        while(u <= d && l <= r){
            for(int i = l;i <= r;i++)
                res.push_back(matrix[u][i]);
            u++;
            for(int i = u;i <=d;i++)
                res.push_back(matrix[i][r]);
            r--;
            if(u <= d){
                for(int i = r;i >= l;i--)
                    res.push_back(matrix[d][i]);
            }
            d--;
            if(l <= r){
                for(int i = d;i >= u;i--)
                    res.push_back(matrix[i][l]);
            }
            l++;
        }
        return res;
    }
};

// { Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int r,c;
        cin>>r>>c;
        vector<vector<int> > matrix(r); 

        for(int i=0; i<r; i++)
        {
            matrix[i].assign(c, 0);
            for( int j=0; j<c; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix, r, c);
        for (int i = 0; i < result.size(); ++i)
                cout<<result[i]<<" ";
        cout<<endl;
    }
    return 0;
}  // } Driver Code Ends
