class Solution {
public:
    int findInMountainArray(int target, MountainArray &m) {
        int l = 1, r = m.length() - 1, t = -1;
        while(l <= r){
            int mid = l + (r - l)/2;
            int idx1 = m.get(mid);
            int idx2 = m.get(mid - 1);
            int idx3 = m.get(mid + 1);
            if(idx1 > idx2){
                if(idx1 > idx3){
                    t = mid;
                    break;
                }
                else
                    l = mid + 1;
            }
            else
                if(idx3 < idx1)
                    r = mid - 1;
        }
        l = 0, r = t;
        while(l <= r){
            int mid = l + (r - l)/2;
            int x = m.get(mid);
            if(x == target)
                return mid;
            else if(x > target)
                r = mid - 1;
            else
                l = mid + 1;
        }
        l = t, r = m.length() - 1;
        while(l <= r){
            int mid = l + (r - l)/2;
            int x = m.get(mid);
            if(x == target)
                return mid;
            else if(x < target)
                r = mid - 1;
            else
                l = mid + 1;
        }
        return -1;
    }
};
