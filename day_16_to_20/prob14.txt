#include<bits/stdc++.h>
using namespace std;
#define N 1000


 // } Driver Code Ends
// you are required to complete this function 
// function should print the required range
class Solution{
    public:
    pair<int,int> findSmallestRange(int KSortedArray[][N], int n, int k){
        vector<pair<int, int>> v;
        for(int i = 0;i < k;i++)
            for(int j = 0;j < n;j++)
                v.push_back({KSortedArray[i][j], i});
        sort(v.begin(), v.end());
        int count = k;
        unordered_map<int, int> mp;
        int i = 0, j = 0, m = v.size(), mn = INT_MAX;
        pair<int, int> ans;
        while(j < m){
            mp[v[j].second]++;
            while(mp.size() == count){
                if(v[j].first - v[i].first + 1 < mn){
                    mn = v[j].first - v[i].first + 1;
                    ans = {v[i].first, v[j].first};
                }
                mp[v[i].second]--;
                if(mp[v[i].second] == 0)
                    mp.erase(v[i].second);
                i++;
            }
            j++;
        }
        return ans;
    }
};

// { Driver Code Starts.
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n, k;
        cin>>n>>k;
        int arr[N][N];
        pair<int,int> rangee;
        for(int i=0; i<k; i++)
            for(int j=0; j<n; j++)
                cin>>arr[i][j];
        Solution obj;
	    rangee = obj.findSmallestRange(arr, n, k);
	    cout<<rangee.first<<" "<<rangee.second<<"\n";
    }   
	return 0;
}

  // } Driver Code Ends
