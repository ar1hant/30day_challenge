#include<bits/stdc++.h>

using namespace std;

class Solution {
  public:
    vector<int> max_of_subarrays(vector<int> arr, int n, int k) {
        priority_queue<pair<int, int>> pq;
        vector<int> ans;
        int c = 0;
        for(int i = 0;i < n;i++){
            if((i - c + 1) < k)
                pq.push({arr[i], i});
            else{
                pq.push({arr[i], i});
                ans.push_back(pq.top().first);
                while(!pq.empty()){
                    if(pq.top().second <= c)
                        pq.pop();
                    else
                        break;
                }
                c++;
            }
        }
        return ans;
    }
};

// Time compleity of this program O(n * long(n))
// Extra Space compleity of this program O(k)

int main() {

    int t;
    cin >> t;

    while (t--) {

        int n, k;
        cin >> n >> k;

        vector<int> arr(n);
        for (int i = 0; i < n; i++) cin >> arr[i];
        Solution ob;
        vector<int> res = ob.max_of_subarrays(arr, n, k);
        for (int i = 0; i < res.size(); i++) cout << res[i] << " ";
        cout << endl;
    }

    return 0;
}