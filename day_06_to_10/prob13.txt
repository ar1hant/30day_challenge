int orangesRotting(vector<vector<int>>& grid) {
        int count = 0, temp_count = 0, days = 0, k;
        int n = grid.size();
        int m = grid[0].size();
        int dx[4]={0,0,1,-1};
        int dy[4]={1,-1,0,0};
        queue<pair<int, int>> q;
        for(int i = 0;i < n;i++){
          for(int j = 0;j < m;j++){
            if(grid[i][j] == 2)
              q.push({i, j});
            if(grid[i][j])
              count++;
          }
        }
        while(!q.empty()){
            k = q.size();
            temp_count += k;
            while(k--){
                int a = q.front().first;
                int b = q.front().second;
                q.pop();
                for(int i = 0;i < 4;i++){
                    int x = a + dx[i];
                    int y = b + dy[i];
                    if(x < 0 || y < 0 || x >= n || y >= m || (grid[x][y] ^ 1))
                        continue;
                    grid[x][y] = 2;
                    q.push({x, y});
                }
            }
            if(!q.empty())
                days++;
        }
        return (count == temp_count) ? days : -1;
    }
