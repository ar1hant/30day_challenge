#include <bits/stdc++.h>

using namespace std;

#define ll long long

class Solution{
  public:
    int countSubArrayProductLessThanK(const vector<int>& a, int n, long long k) {
        ll st = 0, end = 0, c = 0, p = 1;
        while(end < n){
            p *= a[end];
            while(st < n && p >= k)
                p /= a[st++];
            c += end++ - st + 1;
        }
        return c;
    }
};

// Time compleity of this program O(n)
// Extra Space compleity of this program O(1)

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, i;
        long long int k;
        cin >> n >> k;
        vector<int> arr(n);
        for (i = 0; i < n; i++) cin >> arr[i];
        Solution obj;
        cout << obj.countSubArrayProductLessThanK(arr, n, k) << endl;
    }
    return 0;
}